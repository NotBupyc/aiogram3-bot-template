import asyncio
import contextlib
import logging
from datetime import datetime

from aiogram import types, Router, Bot, F
from aiogram.filters import Command, CommandObject

from app.filters import IsAdmin
from app.config import dp, GIT_REPO
from app.messages import BOT_INFO
from app.utils.misc import run_command, bot_info_dict


router = Router()
logger = logging.getLogger(__name__)

# –í–∑—è—Ç–æ —É –î–∂–∞–º–∏–ª—è(kawasaji) –∏ –û–ø–æ–ª–æ(Opolo)
@router.message(
    Command('git'),
    IsAdmin()
)
async def git(message: types.Message, command: CommandObject, bot: Bot):
    """–ù—É —Ç–∏–ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –±–æ—Ç–µ"""
    git_message = await bot.send_message(message.chat.id, "ü™õ *–û–∂–∏–¥–∞–µ–º –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...*", parse_mode="Markdown")

    output, errors = await run_command(f"git pull {GIT_REPO}")

    await bot.edit_message_text(f"ü™õ *–û–∂–∏–¥–∞–µ–º –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...\n<b>Output:</b>\n<blockquote>{output}</blockquote>", git_message.chat.id,
                                git_message.message_id, )

    if "Already up to date.\n" not in output and "–£–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ." not in output:
        await bot.send_message(message.chat.id,
                               f"*–í—ã—Ö–æ–¥!* _(‚è∞{datetime.now().strftime('%d.%m.%Y %H:%M:%S')})_",
                               parse_mode="Markdown")

        with contextlib.suppress(Exception):
            await dp.stop_polling()

        with contextlib.suppress(Exception):
            await dp.wait_closed()

    else:
        await bot.send_message(message.chat.id, f"*–§–∞–π–ª—ã –Ω–µ –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è!*",
                               parse_mode="Markdown")
@router.message(
    Command('restart'),
    IsAdmin()
)
async def restart(message: types.Message):
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
    with contextlib.suppress(Exception):
        await dp.stop_polling()

    with contextlib.suppress(Exception):
        await dp.wait_closed()

@router.message(
    Command("botinfo"),
    IsAdmin()
)
async def botinfo(message: types.Message):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –±–æ—Ç–∞ –∏ —Å–µ—Ä–≤–µ—Ä"""

    m = await message.reply("üöÄ <b>–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...</b>")
    t = BOT_INFO.format(**await bot_info_dict())

    await asyncio.sleep(1)
    await m.edit_text(t)
